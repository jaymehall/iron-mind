version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ironmind-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ironmind:ironmind@db:5432/ironmind
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-ironmind-images}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ironmind-network
    restart: unless-stopped

  # Web Application
  web:
    build: 
      context: ./web-app
      dockerfile: Dockerfile
    container_name: ironmind-web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - ironmind-network
    restart: unless-stopped

  # Mobile App Development Server
  mobile:
    build: 
      context: ./mobile-app
      dockerfile: Dockerfile
    container_name: ironmind-mobile
    ports:
      - "8081:8081"
      - "19002:19002"
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - EXPO_TUNNEL_SUBDOMAIN=ironmind
    volumes:
      - ./mobile-app:/app
      - /app/node_modules
    networks:
      - ironmind-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ironmind-db
    environment:
      POSTGRES_USER: ironmind
      POSTGRES_PASSWORD: ironmind
      POSTGRES_DB: ironmind
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ironmind-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ironmind -d ironmind"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ironmind-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ironmind-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ironmind-network:
    driver: bridge 